library(gplots)
library(RColorBrewer)
ani = read.table('ANIm_percentage_identity.tab', header=T, sep='\t', row.names=1)
install.packages('gplots')
library(gplots)
library(RColorBrewer)
ani = read.table('ANIm_percentage_identity.tab', header=T, sep='\t', row.names=1)
setEPS(); postscript("ANIm.eps")
par(cex.main=0.75)
labels = data.frame(row.names = cclass=c("Actinobacillus capsulatus","Actinobacillus pleuropneumoniae","Actinobacillus pleuropneumoniae","Actinobacillus suis","[Actinobacillus] muris","Actinobacillus ureae","Actinobacillus pleuropneumoniae","Actinobacillus pleuropneumoniae","Actinobacillus pleuropneumoniae","Actinobacillus pleuropneumoniae","Actinobacillus pleuropneumoniae","Actinobacillus pleuropneumoniae","Actinobacillus equuli","Actinobacillus pleuropneumoniae","Actinobacillus pleuropneumoniae","Actinobacillus pleuropneumoniae","Actinobacillus pleuropneumoniae","Actinobacillus pleuropneumoniae","Actinobacillus pleuropneumoniae","Actinobacillus pleuropneumoniae","Actinobacillus pleuropneumoniae","Actinobacillus pleuropneumoniae","Actinobacillus pleuropneumoniae","Actinobacillus pleuropneumoniae","Actinobacillus minor","Actinobacillus minor","Actinobacillus suis","Actinobacillus pleuropneumoniae","Actinobacillus pleuropneumoniae","Actinobacillus succinogenes","Actinobacillus pleuropneumoniae","Actinobacillus pleuropneumoniae","Avibacterium paragallinarum","Avibacterium paragallinarum","Avibacterium paragallinarum","Avibacterium paragallinarum","Avibacterium paragallinarum","Avibacterium paragallinarum","Avibacterium paragallinarum","Bibersteinia trehalosi","Bibersteinia trehalosi","Bibersteinia trehalosi","Bibersteinia trehalosi","Gallibacterium anatis","Gallibacterium anatis","Gallibacterium anatis","Gallibacterium anatis","Gallibacterium anatis","Gallibacterium anatis","Gallibacterium anatis","Gallibacterium anatis","Gallibacterium anatis","Gallibacterium anatis","Gallibacterium anatis","Gallibacterium anatis","Gallibacterium anatis","Gallibacterium anatis","Gallibacterium anatis","Gallibacterium anatis","Gallibacterium anatis","Gallibacterium genomosp. 2","Gallibacterium genomosp. 1","Gallibacterium anatis","Gallibacterium anatis","Gallibacterium anatis","Gallibacterium anatis","Gallibacterium anatis","Gallibacterium anatis","[Haemophilus] parasuis","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus parainfluenzae","Haemophilus haemolyticus","Haemophilus parainfluenzae","Haemophilus parainfluenzae","Haemophilus influenzae","Haemophilus sp. C1","Haemophilus haemolyticus","Haemophilus haemolyticus","Haemophilus haemolyticus","Haemophilus haemolyticus","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus sputorum","Haemophilus parahaemolyticus","Haemophilus paraphrohaemolyticus","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus parainfluenzae","Haemophilus parainfluenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus parainfluenzae","Haemophilus influenzae","Haemophilus parainfluenzae","Haemophilus influenzae","Haemophilus parainfluenzae","Haemophilus influenzae","Haemophilus parainfluenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus parainfluenzae","Haemophilus parainfluenzae","Haemophilus influenzae","Haemophilus parainfluenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus parainfluenzae","Haemophilus influenzae","Haemophilus parainfluenzae","Haemophilus influenzae","Haemophilus influenzae","[Haemophilus] ducreyi","[Haemophilus] ducreyi","[Haemophilus] ducreyi","[Haemophilus] ducreyi","[Haemophilus] ducreyi","[Haemophilus] ducreyi","[Haemophilus] ducreyi","[Haemophilus] ducreyi","[Haemophilus] ducreyi","[Haemophilus] ducreyi","[Haemophilus] ducreyi","[Haemophilus] ducreyi","[Haemophilus] ducreyi","[Haemophilus] ducreyi","Haemophilus haemolyticus","Haemophilus haemolyticus","Haemophilus haemolyticus","Haemophilus haemolyticus","Haemophilus influenzae","Haemophilus sp. oral taxon 851","Haemophilus sputorum","Haemophilus influenzae","Haemophilus parainfluenzae","Haemophilus pittmaniae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus haemolyticus","Haemophilus aegyptius","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus parainfluenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus parahaemolyticus","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","[Haemophilus] parasuis","Haemophilus influenzae","Haemophilus sp. FF7","Haemophilus sp. FF7","[Haemophilus] parasuis","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus parainfluenzae","[Haemophilus] parasuis","[Haemophilus] parasuis","[Haemophilus] parasuis","Haemophilus influenzae","[Haemophilus] parasuis","[Haemophilus] parasuis","[Haemophilus] parasuis","[Haemophilus] parasuis","[Haemophilus] parasuis","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","[Haemophilus] parasuis","[Haemophilus] parasuis","[Haemophilus] parasuis","Haemophilus influenzae","[Haemophilus] parasuis","[Haemophilus] parasuis","[Haemophilus] parasuis","[Haemophilus] parasuis","[Haemophilus] parasuis","[Haemophilus] parasuis","[Haemophilus] parasuis","[Haemophilus] parasuis","[Haemophilus] parasuis","[Haemophilus] parasuis","Haemophilus influenzae","[Haemophilus] parasuis","[Haemophilus] parasuis","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","[Haemophilus] ducreyi","Mannheimia haemolytica","Mannheimia haemolytica","Mannheimia haemolytica","Mannheimia haemolytica","Mannheimia haemolytica","Mannheimia haemolytica","Mannheimia haemolytica","Mannheimia haemolytica","Mannheimia haemolytica","Mannheimia haemolytica","Mannheimia haemolytica","Mannheimia haemolytica","Mannheimia haemolytica","Mannheimia haemolytica","Mannheimia haemolytica","Mannheimia haemolytica","JordanLabGenus","Mannheimia haemolytica","Mannheimia haemolytica","Mannheimia haemolytica","Mannheimia haemolytica","Mannheimia haemolytica","Mannheimia granulomatis","Mannheimia haemolytica","Mannheimia varigena","Mannheimia varigena","Mannheimia varigena","Mannheimia varigena","Mannheimia haemolytica","Mannheimia haemolytica","Mannheimia haemolytica","Mannheimia haemolytica","Mannheimia haemolytica","Mannheimia haemolytica","Mannheimia haemolytica","Mannheimia haemolytica","Mannheimia haemolytica","Pasteurella multocida","Pasteurella multocida","Pasteurella multocida","Pasteurella multocida","Pasteurella multocida","Pasteurella multocida","Pasteurella multocida","Pasteurella multocida","[Pasteurella] pneumotropica","Pasteurella multocida","Pasteurella multocida","Pasteurella multocida","Pasteurella multocida","Pasteurella multocida","Pasteurella multocida","Pasteurella multocida","Pasteurella multocida","Pasteurella multocida","Pasteurella multocida","JordanLabGenus","Pasteurella multocida","Pasteurella multocida","Pasteurella multocida","Pasteurella multocida","Pasteurella multocida","Pasteurella multocida","Pasteurella multocida","Pasteurella multocida","Pasteurella multocida","Pasteurella multocida","Pasteurella multocida","Pasteurella multocida","Pasteurella multocida","Pasteurella multocida","Pasteurella multocida","Pasteurella multocida","[Pasteurella] pneumotropica","Pasteurella multocida","Pasteurella multocida","Pasteurella multocida","Pasteurella multocida","Pasteurella multocida","[Pasteurella] pneumotropica","Pasteurella dagmatis","Pasteurella multocida","Pasteurella multocida","Pasteurella multocida","Pasteurella multocida","Pasteurella multocida","Pasteurella multocida","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter aphrophilus","Aggregatibacter aphrophilus","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter aphrophilus","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter aphrophilus","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter aphrophilus","Aggregatibacter actinomycetemcomitans","Aggregatibacter aphrophilus","Aggregatibacter actinomycetemcomitans","JordanLabGenus"))
)
.
,
)))
labels = data.frame(row.names=cclass=c("Actinobacillus capsulatus","Actinobacillus pleuropneumoniae","Actinobacillus pleuropneumoniae","Actinobacillus suis","[Actinobacillus] muris","Actinobacillus ureae","Actinobacillus pleuropneumoniae","Actinobacillus pleuropneumoniae","Actinobacillus pleuropneumoniae","Actinobacillus pleuropneumoniae","Actinobacillus pleuropneumoniae","Actinobacillus pleuropneumoniae","Actinobacillus equuli","Actinobacillus pleuropneumoniae","Actinobacillus pleuropneumoniae","Actinobacillus pleuropneumoniae","Actinobacillus pleuropneumoniae","Actinobacillus pleuropneumoniae","Actinobacillus pleuropneumoniae","Actinobacillus pleuropneumoniae","Actinobacillus pleuropneumoniae","Actinobacillus pleuropneumoniae","Actinobacillus pleuropneumoniae","Actinobacillus pleuropneumoniae","Actinobacillus minor","Actinobacillus minor","Actinobacillus suis","Actinobacillus pleuropneumoniae","Actinobacillus pleuropneumoniae","Actinobacillus succinogenes","Actinobacillus pleuropneumoniae","Actinobacillus pleuropneumoniae","Avibacterium paragallinarum","Avibacterium paragallinarum","Avibacterium paragallinarum","Avibacterium paragallinarum","Avibacterium paragallinarum","Avibacterium paragallinarum","Avibacterium paragallinarum","Bibersteinia trehalosi","Bibersteinia trehalosi","Bibersteinia trehalosi","Bibersteinia trehalosi","Gallibacterium anatis","Gallibacterium anatis","Gallibacterium anatis","Gallibacterium anatis","Gallibacterium anatis","Gallibacterium anatis","Gallibacterium anatis","Gallibacterium anatis","Gallibacterium anatis","Gallibacterium anatis","Gallibacterium anatis","Gallibacterium anatis","Gallibacterium anatis","Gallibacterium anatis","Gallibacterium anatis","Gallibacterium anatis","Gallibacterium anatis","Gallibacterium genomosp. 2","Gallibacterium genomosp. 1","Gallibacterium anatis","Gallibacterium anatis","Gallibacterium anatis","Gallibacterium anatis","Gallibacterium anatis","Gallibacterium anatis","[Haemophilus] parasuis","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus parainfluenzae","Haemophilus haemolyticus","Haemophilus parainfluenzae","Haemophilus parainfluenzae","Haemophilus influenzae","Haemophilus sp. C1","Haemophilus haemolyticus","Haemophilus haemolyticus","Haemophilus haemolyticus","Haemophilus haemolyticus","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus sputorum","Haemophilus parahaemolyticus","Haemophilus paraphrohaemolyticus","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus parainfluenzae","Haemophilus parainfluenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus parainfluenzae","Haemophilus influenzae","Haemophilus parainfluenzae","Haemophilus influenzae","Haemophilus parainfluenzae","Haemophilus influenzae","Haemophilus parainfluenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus parainfluenzae","Haemophilus parainfluenzae","Haemophilus influenzae","Haemophilus parainfluenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus parainfluenzae","Haemophilus influenzae","Haemophilus parainfluenzae","Haemophilus influenzae","Haemophilus influenzae","[Haemophilus] ducreyi","[Haemophilus] ducreyi","[Haemophilus] ducreyi","[Haemophilus] ducreyi","[Haemophilus] ducreyi","[Haemophilus] ducreyi","[Haemophilus] ducreyi","[Haemophilus] ducreyi","[Haemophilus] ducreyi","[Haemophilus] ducreyi","[Haemophilus] ducreyi","[Haemophilus] ducreyi","[Haemophilus] ducreyi","[Haemophilus] ducreyi","Haemophilus haemolyticus","Haemophilus haemolyticus","Haemophilus haemolyticus","Haemophilus haemolyticus","Haemophilus influenzae","Haemophilus sp. oral taxon 851","Haemophilus sputorum","Haemophilus influenzae","Haemophilus parainfluenzae","Haemophilus pittmaniae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus haemolyticus","Haemophilus aegyptius","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus parainfluenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus parahaemolyticus","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","[Haemophilus] parasuis","Haemophilus influenzae","Haemophilus sp. FF7","Haemophilus sp. FF7","[Haemophilus] parasuis","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus parainfluenzae","[Haemophilus] parasuis","[Haemophilus] parasuis","[Haemophilus] parasuis","Haemophilus influenzae","[Haemophilus] parasuis","[Haemophilus] parasuis","[Haemophilus] parasuis","[Haemophilus] parasuis","[Haemophilus] parasuis","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","[Haemophilus] parasuis","[Haemophilus] parasuis","[Haemophilus] parasuis","Haemophilus influenzae","[Haemophilus] parasuis","[Haemophilus] parasuis","[Haemophilus] parasuis","[Haemophilus] parasuis","[Haemophilus] parasuis","[Haemophilus] parasuis","[Haemophilus] parasuis","[Haemophilus] parasuis","[Haemophilus] parasuis","[Haemophilus] parasuis","Haemophilus influenzae","[Haemophilus] parasuis","[Haemophilus] parasuis","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","[Haemophilus] ducreyi","Mannheimia haemolytica","Mannheimia haemolytica","Mannheimia haemolytica","Mannheimia haemolytica","Mannheimia haemolytica","Mannheimia haemolytica","Mannheimia haemolytica","Mannheimia haemolytica","Mannheimia haemolytica","Mannheimia haemolytica","Mannheimia haemolytica","Mannheimia haemolytica","Mannheimia haemolytica","Mannheimia haemolytica","Mannheimia haemolytica","Mannheimia haemolytica","JordanLabGenus","Mannheimia haemolytica","Mannheimia haemolytica","Mannheimia haemolytica","Mannheimia haemolytica","Mannheimia haemolytica","Mannheimia granulomatis","Mannheimia haemolytica","Mannheimia varigena","Mannheimia varigena","Mannheimia varigena","Mannheimia varigena","Mannheimia haemolytica","Mannheimia haemolytica","Mannheimia haemolytica","Mannheimia haemolytica","Mannheimia haemolytica","Mannheimia haemolytica","Mannheimia haemolytica","Mannheimia haemolytica","Mannheimia haemolytica","Pasteurella multocida","Pasteurella multocida","Pasteurella multocida","Pasteurella multocida","Pasteurella multocida","Pasteurella multocida","Pasteurella multocida","Pasteurella multocida","[Pasteurella] pneumotropica","Pasteurella multocida","Pasteurella multocida","Pasteurella multocida","Pasteurella multocida","Pasteurella multocida","Pasteurella multocida","Pasteurella multocida","Pasteurella multocida","Pasteurella multocida","Pasteurella multocida","JordanLabGenus","Pasteurella multocida","Pasteurella multocida","Pasteurella multocida","Pasteurella multocida","Pasteurella multocida","Pasteurella multocida","Pasteurella multocida","Pasteurella multocida","Pasteurella multocida","Pasteurella multocida","Pasteurella multocida","Pasteurella multocida","Pasteurella multocida","Pasteurella multocida","Pasteurella multocida","Pasteurella multocida","[Pasteurella] pneumotropica","Pasteurella multocida","Pasteurella multocida","Pasteurella multocida","Pasteurella multocida","Pasteurella multocida","[Pasteurella] pneumotropica","Pasteurella dagmatis","Pasteurella multocida","Pasteurella multocida","Pasteurella multocida","Pasteurella multocida","Pasteurella multocida","Pasteurella multocida","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter aphrophilus","Aggregatibacter aphrophilus","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter aphrophilus","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter aphrophilus","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter aphrophilus","Aggregatibacter actinomycetemcomitans","Aggregatibacter aphrophilus","Aggregatibacter actinomycetemcomitans","JordanLabGenus")
)
labels = data.frame(row.names=cclass=c("Actinobacillus capsulatus","Actinobacillus pleuropneumoniae","Actinobacillus pleuropneumoniae","Actinobacillus suis","[Actinobacillus] muris","Actinobacillus ureae","Actinobacillus pleuropneumoniae","Actinobacillus pleuropneumoniae","Actinobacillus pleuropneumoniae","Actinobacillus pleuropneumoniae","Actinobacillus pleuropneumoniae","Actinobacillus pleuropneumoniae","Actinobacillus equuli","Actinobacillus pleuropneumoniae","Actinobacillus pleuropneumoniae","Actinobacillus pleuropneumoniae","Actinobacillus pleuropneumoniae","Actinobacillus pleuropneumoniae","Actinobacillus pleuropneumoniae","Actinobacillus pleuropneumoniae","Actinobacillus pleuropneumoniae","Actinobacillus pleuropneumoniae","Actinobacillus pleuropneumoniae","Actinobacillus pleuropneumoniae","Actinobacillus minor","Actinobacillus minor","Actinobacillus suis","Actinobacillus pleuropneumoniae","Actinobacillus pleuropneumoniae","Actinobacillus succinogenes","Actinobacillus pleuropneumoniae","Actinobacillus pleuropneumoniae","Avibacterium paragallinarum","Avibacterium paragallinarum","Avibacterium paragallinarum","Avibacterium paragallinarum","Avibacterium paragallinarum","Avibacterium paragallinarum","Avibacterium paragallinarum","Bibersteinia trehalosi","Bibersteinia trehalosi","Bibersteinia trehalosi","Bibersteinia trehalosi","Gallibacterium anatis","Gallibacterium anatis","Gallibacterium anatis","Gallibacterium anatis","Gallibacterium anatis","Gallibacterium anatis","Gallibacterium anatis","Gallibacterium anatis","Gallibacterium anatis","Gallibacterium anatis","Gallibacterium anatis","Gallibacterium anatis","Gallibacterium anatis","Gallibacterium anatis","Gallibacterium anatis","Gallibacterium anatis","Gallibacterium anatis","Gallibacterium genomosp. 2","Gallibacterium genomosp. 1","Gallibacterium anatis","Gallibacterium anatis","Gallibacterium anatis","Gallibacterium anatis","Gallibacterium anatis","Gallibacterium anatis","[Haemophilus] parasuis","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus parainfluenzae","Haemophilus haemolyticus","Haemophilus parainfluenzae","Haemophilus parainfluenzae","Haemophilus influenzae","Haemophilus sp. C1","Haemophilus haemolyticus","Haemophilus haemolyticus","Haemophilus haemolyticus","Haemophilus haemolyticus","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus sputorum","Haemophilus parahaemolyticus","Haemophilus paraphrohaemolyticus","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus parainfluenzae","Haemophilus parainfluenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus parainfluenzae","Haemophilus influenzae","Haemophilus parainfluenzae","Haemophilus influenzae","Haemophilus parainfluenzae","Haemophilus influenzae","Haemophilus parainfluenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus parainfluenzae","Haemophilus parainfluenzae","Haemophilus influenzae","Haemophilus parainfluenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus parainfluenzae","Haemophilus influenzae","Haemophilus parainfluenzae","Haemophilus influenzae","Haemophilus influenzae","[Haemophilus] ducreyi","[Haemophilus] ducreyi","[Haemophilus] ducreyi","[Haemophilus] ducreyi","[Haemophilus] ducreyi","[Haemophilus] ducreyi","[Haemophilus] ducreyi","[Haemophilus] ducreyi","[Haemophilus] ducreyi","[Haemophilus] ducreyi","[Haemophilus] ducreyi","[Haemophilus] ducreyi","[Haemophilus] ducreyi","[Haemophilus] ducreyi","Haemophilus haemolyticus","Haemophilus haemolyticus","Haemophilus haemolyticus","Haemophilus haemolyticus","Haemophilus influenzae","Haemophilus sp. oral taxon 851","Haemophilus sputorum","Haemophilus influenzae","Haemophilus parainfluenzae","Haemophilus pittmaniae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus haemolyticus","Haemophilus aegyptius","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus parainfluenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus parahaemolyticus","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","[Haemophilus] parasuis","Haemophilus influenzae","Haemophilus sp. FF7","Haemophilus sp. FF7","[Haemophilus] parasuis","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","Haemophilus parainfluenzae","[Haemophilus] parasuis","[Haemophilus] parasuis","[Haemophilus] parasuis","Haemophilus influenzae","[Haemophilus] parasuis","[Haemophilus] parasuis","[Haemophilus] parasuis","[Haemophilus] parasuis","[Haemophilus] parasuis","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","[Haemophilus] parasuis","[Haemophilus] parasuis","[Haemophilus] parasuis","Haemophilus influenzae","[Haemophilus] parasuis","[Haemophilus] parasuis","[Haemophilus] parasuis","[Haemophilus] parasuis","[Haemophilus] parasuis","[Haemophilus] parasuis","[Haemophilus] parasuis","[Haemophilus] parasuis","[Haemophilus] parasuis","[Haemophilus] parasuis","Haemophilus influenzae","[Haemophilus] parasuis","[Haemophilus] parasuis","Haemophilus influenzae","Haemophilus influenzae","Haemophilus influenzae","[Haemophilus] ducreyi","Mannheimia haemolytica","Mannheimia haemolytica","Mannheimia haemolytica","Mannheimia haemolytica","Mannheimia haemolytica","Mannheimia haemolytica","Mannheimia haemolytica","Mannheimia haemolytica","Mannheimia haemolytica","Mannheimia haemolytica","Mannheimia haemolytica","Mannheimia haemolytica","Mannheimia haemolytica","Mannheimia haemolytica","Mannheimia haemolytica","Mannheimia haemolytica","JordanLabGenus","Mannheimia haemolytica","Mannheimia haemolytica","Mannheimia haemolytica","Mannheimia haemolytica","Mannheimia haemolytica","Mannheimia granulomatis","Mannheimia haemolytica","Mannheimia varigena","Mannheimia varigena","Mannheimia varigena","Mannheimia varigena","Mannheimia haemolytica","Mannheimia haemolytica","Mannheimia haemolytica","Mannheimia haemolytica","Mannheimia haemolytica","Mannheimia haemolytica","Mannheimia haemolytica","Mannheimia haemolytica","Mannheimia haemolytica","Pasteurella multocida","Pasteurella multocida","Pasteurella multocida","Pasteurella multocida","Pasteurella multocida","Pasteurella multocida","Pasteurella multocida","Pasteurella multocida","[Pasteurella] pneumotropica","Pasteurella multocida","Pasteurella multocida","Pasteurella multocida","Pasteurella multocida","Pasteurella multocida","Pasteurella multocida","Pasteurella multocida","Pasteurella multocida","Pasteurella multocida","Pasteurella multocida","JordanLabGenus","Pasteurella multocida","Pasteurella multocida","Pasteurella multocida","Pasteurella multocida","Pasteurella multocida","Pasteurella multocida","Pasteurella multocida","Pasteurella multocida","Pasteurella multocida","Pasteurella multocida","Pasteurella multocida","Pasteurella multocida","Pasteurella multocida","Pasteurella multocida","Pasteurella multocida","Pasteurella multocida","[Pasteurella] pneumotropica","Pasteurella multocida","Pasteurella multocida","Pasteurella multocida","Pasteurella multocida","Pasteurella multocida","[Pasteurella] pneumotropica","Pasteurella dagmatis","Pasteurella multocida","Pasteurella multocida","Pasteurella multocida","Pasteurella multocida","Pasteurella multocida","Pasteurella multocida","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter aphrophilus","Aggregatibacter aphrophilus","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter aphrophilus","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter aphrophilus","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter actinomycetemcomitans","Aggregatibacter aphrophilus","Aggregatibacter actinomycetemcomitans","Aggregatibacter aphrophilus","Aggregatibacter actinomycetemcomitans","JordanLabGenus"))
""
''
)
library(gplots)
library(RColorBrewer)
labels = data.frame(row.names=c
labels = data.frame(row.names=c("GCF_001027815.1","GCF_001028245.1","GCF_000262245.1","GCF_001510775.1","GCA_001542975.1","GCF_000409915.1","GCF_000379905.1","GCF_000006825.1","GCA_000413135.1","GCF_000412105.1","GCF_000973565.1","GCF_000478235.1","GCF_001027695.1","GCF_000291605.1","GCF_000412075.1","GCF_000412015.1","GCF_001064415.1","GCF_000412125.1","GCF_000973525.1","GCF_000296345.2","GCF_000298655.1","GCF_001019715.1","GCF_000234745.1","GCF_001578435.1","GCF_000219335.1","GCF_000412035.1","GCF_000469095.1","GCF_000255915.1","GCF_001027825.1","GCF_001029495.1","GCF_000291645.1","GCF_001028225.1","GCF_000163475.1","GCF_000259545.1","GCF_000754275.1","GCF_000296345.1","GCF_001027665.1","GCF_000413135.1","GCF_001027685.1","GCF_000731745.1","GCF_000298675.1","GCF_000731735.1","GCF_001028205.1","GCF_001027805.1","GCF_000219315.1","GCF_001027735.1","GCF_001027755.1","GCF_000730685.1","GCF_000291625.1","GCF_000512395.1"))
labels = data.frame(row.names=c
labels = data.frame
labels = data.frame(row.names = c
labels = data.frame(row.names = c
labels = as.data.frame(read.table('classes.tsv', row.names = 1))
labels = as.data.frame(read.table('classes.tsv', row.names = 1))
labels = as.data.frame(read.table('classes.tsv', row.names = 1, fill = TRUE))
labels = as.data.frame(read.table('classes.tsv', row.names = 1))
labels = as.data.frame(read.table('classes.tsv', row.names = 1))
labels = as.data.frame(read.table('classes.tsv', row.names = 1, fill = TRUE))
labels = as.data.frame(read.table('classes.tsv', row.names = 1, fill = TRUE, header = FALSE))
labels = as.data.frame(read.table('classes.tsv', row.names = 0, fill = TRUE, header = FALSE))
labels = as.data.frame(read.table('classes.tsv', row.names = NULL, fill = TRUE, header = FALSE))
View(labels)
labels = as.data.frame(read.table('classes.tsv', row.names = 1))
labels = as.data.frame(read.table('classes.tsv', row.names = NULL, fill = TRUE, header = FALSE))
labels = as.data.frame(read.table('classes.tsv', row.names =1, header = FALSE))
labels = as.data.frame(read.table('classes.tsv', row.names =1, header = FALSE))
labels = as.data.frame(read.table('classes.tsv', row.names = NULL, fill = TRUE, header = FALSE))
labels = as.data.frame(read.table('classes.tsv', row.names = NULL, fill = TRUE, header = FALSE))
labels = as.data.frame(read.table('classes.tsv', row.names = 1, header = FALSE))
labels = as.data.frame(read.table('classes.tsv', row.names = 1, header = FALSE, fill = TRUE))
View(labels)
labels = as.data.frame(read.table('classes.tsv', row.names = 1, header = FALSE, fill = TRUE, sep = \t))
labels = as.data.frame(read.table('classes.tsv', row.names = 1, header = FALSE, fill = TRUE, sep = "\t"))
labels = as.data.frame(read.table('classes.tsv', row.names = 1, header = FALSE, sep = "\t"))
colnames(labels) <- c("","class")
colnames(labels) <- c(class")
colnames(labels) <- c("class")
lablist = sort(unique(labels[,"class"])
)
colourlist = rainbow(length(lablist))
label_colours = data.frame(row.names=sort(lablist), colours=colourlist)
labels$colours = label_colours[labels$class,]
rowlabels = labels[rownames(ani),]
collabels = labels[colnames(ani),]
labs = as.data.frame(read.table('labels.tsv', row.names = 1, header = FALSE, sep = "\t")
)
labs = as.data.frame(read.table('labels.tsv', row.names = 1, header = FALSE, sep = "\t")
)
lablist = sort(unique(labels[,"class"]))
colourlist = rainbow(length(lablist))
label_colours = data.frame(row.names=sort(lablist), colours=colourlist)
labels$colours = label_colours[labels$class,]
rowlabels = labels[rownames(ani),]
collabels = labels[colnames(ani),]
View(label_colours)
View(labs)
View(rowlabels)
heatmap.2(as.matrix(ani), col=bluered, breaks=seq(0.00, 1.00, 0.001000), trace='none', margins=c(15, 15), cexCol=0.05 + 1/log10(2 * ncol(ani)), cexRow=0.05 + 1/log10(2 * nrow(ani)), main='ANIm_alignment_coverage', labRow=labs, RowSideColors=as.vector(rowlabels[,"colours"]), ColSideColors=as.vector(collabels[,"colours"]))
lablist = sort(unique(labels[,"class"]))
par(lend=1)
legend("topright", legend=sort(lablist), col=colourlist, lty=1, lwd=10)
dev.off()
heatmap.2(as.matrix(ani), col=bluered, breaks=seq(0.00, 1.00, 0.001000), trace='none', margins=c(15, 15), cexCol=0.05 + 1/log10(2 * ncol(ani)), cexRow=0.05 + 1/log10(2 * nrow(ani)), main='ANIm_alignment_coverage', labRow=labs, RowSideColors=as.vector(rowlabels[,"colours"]), ColSideColors=as.vector(collabels[,"colours"]))
lablist = sort(unique(labels[,"class"]))
par(lend=1)
legend("topright", legend=sort(lablist), col=colourlist, lty=1, lwd=10)
heatmap.2(as.matrix(ani), col=bluered, breaks=seq(0.00, 1.00, 0.001000), trace='none', margins=c(15, 15), cexCol=0.05 + 1/log10(2 * ncol(ani)), cexRow=0.05 + 1/log10(2 * nrow(ani)), main='ANIm_alignment_coverage', labRow=labs(V2), RowSideColors=as.vector(rowlabels[,"colours"]), ColSideColors=as.vector(collabels[,"colours"]))
lablist = sort(unique(labels[,"class"]))
par(lend=1)
legend("topright", legend=sort(lablist), col=colourlist, lty=1, lwd=10)
colnames(labs) < c("labels")
colnames(labs) <- c("labels")
View(labs)
heatmap.2(as.matrix(ani), col=bluered, breaks=seq(0.00, 1.00, 0.001000), trace='none', margins=c(15, 15), cexCol=0.05 + 1/log10(2 * ncol(ani)), cexRow=0.05 + 1/log10(2 * nrow(ani)), main='ANIm_alignment_coverage', labRow=labs, RowSideColors=as.vector(rowlabels[,"colours"]), ColSideColors=as.vector(collabels[,"colours"]))
lablist = sort(unique(labels[,"class"]))
par(lend=1)
legend("topright", legend=sort(lablist), col=colourlist, lty=1, lwd=10)
heatmap.2(as.matrix(ani), col=bluered, breaks=seq(0.00, 1.00, 0.001000), trace='none', margins=c(15, 15), cexCol=0.05 + 1/log10(2 * ncol(ani)), cexRow=0.05 + 1/log10(2 * nrow(ani)), main='ANIm_alignment_coverage', RowSideColors=as.vector(rowlabels[,"colours"]), ColSideColors=as.vector(collabels[,"colours"]))
lablist = sort(unique(labels[,"class"]))
par(lend=1)
legend("topright", legend=sort(lablist), col=colourlist, lty=1, lwd=10)
heatmap.2(as.matrix(ani), col=bluered, breaks=seq(0.00, 1.00, 0.001000), trace='none', margins=c(15, 15), cexCol=0.05 + 1/log10(2 * ncol(ani)), cexRow=0.05 + 1/log10(2 * nrow(ani)), main='ANIm_alignment_coverage', RowSideColors=as.vector(rowlabels[,"colours"]), ColSideColors=as.vector(collabels[,"colours"]))
lablist = sort(unique(labels[,"class"]))
par(lend=1)
legend("topright", legend=sort(lablist), col=colourlist, lty=1, lwd=1)
heatmap.2(as.matrix(ani), col=bluered, breaks=seq(0.00, 1.00, 0.001000), trace='none', margins=c(15, 15), cexCol=0.05 + 1/log10(2 * ncol(ani)), cexRow=0.05 + 1/log10(2 * nrow(ani)), main='ANIm_alignment_coverage', RowSideColors=as.vector(rowlabels[,"colours"]), ColSideColors=as.vector(collabels[,"colours"]))
lablist = sort(unique(labels[,"class"]))
par(lend=1)
legend("topright", legend=sort(lablist), col=colourlist, lty=1, lwd=10)
heatmap.2(as.matrix(ani), col=bluered, breaks=seq(0.00, 1.00, 0.001000), trace='none', margins=c(15, 15), cexCol=0.05 + 1/log10(2 * ncol(ani)), cexRow=0.05 + 1/log10(2 * nrow(ani)), main='ANIm_alignment_coverage', RowSideColors=as.vector(rowlabels[,"colours"]), ColSideColors=as.vector(collabels[,"colours"]))
lablist = sort(unique(labels[,"class"]))
par(lend=01)
legend("topright", legend=sort(lablist), col=colourlist, lty=1, lwd=10)
heatmap.2(as.matrix(ani), col=bluered, breaks=seq(0.90, 1.00, 0.001000), trace='none', margins=c(15, 15), cexCol=0.05 + 1/log10(2 * ncol(ani)), cexRow=0.05 + 1/log10(2 * nrow(ani)), main='ANIm_alignment_coverage', RowSideColors=as.vector(rowlabels[,"colours"]), ColSideColors=as.vector(collabels[,"colours"]))
lablist = sort(unique(labels[,"class"]))
par(lend=.1)
legend("topright", legend=sort(lablist), col=colourlist, lty=1, lwd=10)
heatmap.2(as.matrix(ani), col=bluered, breaks=seq(0.90, 1.00, 0.001000), trace='none', margins=c(15, 15), cexCol=0.05 + 1/log10(2 * ncol(ani)), cexRow=0.05 + 1/log10(2 * nrow(ani)), main='ANIm_alignment_coverage', RowSideColors=as.vector(rowlabels[,"colours"]), ColSideColors=as.vector(collabels[,"colours"]))
lablist = sort(unique(labels[,"class"])))
heatmap.2(as.matrix(ani), col=bluered, breaks=seq(0.90, 1.00, 0.001000), trace='none', margins=c(15, 15), cexCol=0.05 + 1/log10(2 * ncol(ani)), cexRow=0.05 + 1/log10(2 * nrow(ani)), main='ANIm_alignment_coverage', RowSideColors=as.vector(rowlabels[,"colours"]), labCol = NULL, labRow=Null, ColSideColors=as.vector(collabels[,"colours"]))
lablist = sort(unique(labels[,"class"])))
heatmap.2(as.matrix(ani), col=bluered, breaks=seq(0.90, 1.00, 0.001000), trace='none', margins=c(15, 15), cexCol=0.05 + 1/log10(2 * ncol(ani)), cexRow=0.05 + 1/log10(2 * nrow(ani)), main='ANIm_alignment_coverage', RowSideColors=as.vector(rowlabels[,"colours"]), labCol = FALSE, labRow=FALSE, ColSideColors=as.vector(collabels[,"colours"]))
lablist = sort(unique(labels[,"class"])))
labels = as.data.frame(read.table('classes.tsv', row.names = 1, header = FALSE, sep = "\t"))
colnames(labels) <- c("class")
lablist = sort(unique(labels[,"class"]))
colourlist = rainbow(length(lablist))
label_colours = data.frame(row.names=sort(lablist), colours=colourlist)
labels$colours = label_colours[labels$class,]
rowlabels = labels[rownames(ani),]
collabels = labels[colnames(ani),]
heatmap.2(as.matrix(ani), col=bluered, breaks=seq(0.90, 1.00, 0.001000), trace='none', margins=c(15, 15), cexCol=0.05 + 1/log10(2 * ncol(ani)), cexRow=0.05 + 1/log10(2 * nrow(ani)), main='ANIm_alignment_coverage', RowSideColors=as.vector(rowlabels[,"colours"]), ColSideColors=as.vector(collabels[,"colours"]))
lablist = sort(unique(labels[,"class"]))
par(lend=.1)
legend("topright", legend=sort(lablist), col=colourlist, lty=1, lwd=10)
labels = as.data.frame(read.table('classes.tsv', row.names = 1, header = FALSE, sep = "\t"))
colnames(labels) <- c("class")
lablist = sort(unique(labels[,"class"]))
colourlist = rainbow(length(lablist))
label_colours = data.frame(row.names=sort(lablist), colours=colourlist)
labels$colours = label_colours[labels$class,]
rowlabels = labels[rownames(ani),]
collabels = labels[colnames(ani),]
heatmap.2(as.matrix(ani), col=bluered, breaks=seq(0.90, 1.00, 0.001000), trace='none', margins=c(15, 15), cexCol=0.05 + 1/log10(2 * ncol(ani)), cexRow=0.05 + 1/log10(2 * nrow(ani)), dendrogram = col, labRow = FALSE, labCol = FALSE, main='ANIm_alignment_coverage', RowSideColors=as.vector(rowlabels[,"colours"]), ColSideColors=as.vector(collabels[,"colours"]))
lablist = sort(unique(labels[,"class"]))
par(lend=.1)
legend("topright", legend=sort(lablist), col=colourlist, lty=1, lwd=10)
heatmap.2(as.matrix(ani), col=bluered, breaks=seq(0.90, 1.00, 0.001000), trace='none', margins=c(15, 15), cexCol=0.05 + 1/log10(2 * ncol(ani)), cexRow=0.05 + 1/log10(2 * nrow(ani)), dendrogram = "col", labRow = FALSE, labCol = FALSE, main='ANIm_alignment_coverage', RowSideColors=as.vector(rowlabels[,"colours"]), ColSideColors=as.vector(collabels[,"colours"]))
lablist = sort(unique(labels[,"class"]))
par(lend=.1)
legend("topright", legend=sort(lablist), col=colourlist, lty=1, lwd=10)
library(gplots)
library(RColorBrewer)
rowlabels$colours[rowlabels$colours == "#FF00AAFF"] <- "FFFFFFFF"
rowlabels$colours[rowlabels$colours == "#FF00AAFF"] <- "#FFFFFFFF"
rowlabels$colours <- as.character(rowlabels$colours)
rowlabels$colours[rowlabels$colours == "#FF00AAFF"] <- "#FFFFFFFF"
View(rowlabels)
rowlabels$colours[rowlabels$colours == "N/A"] <- "#FFFFFFFF"
View(rowlabels)
library(gplots)
library(RColorBrewer)
View(label_colours)
label_colours$colours[label_colours$colours == "#FF00AAFF"] <- "#FFFFFFFF"
label_colours$colours[label_colours$colours == "FF00AAFF"] <- "FFFFFFFF"
lablist = sort(unique(labels[,"class"]))
colourlist = rainbow(length(lablist))
label_colours = data.frame(row.names=sort(lablist), colours=colourlist)
labels$colours = label_colours[labels$class,]
rowlabels = labels[rownames(ani),]
collabels = labels[colnames(ani),]
lablist = sort(unique(labels[,"class"]))
colourlist = rainbow(length(lablist)+1)
label_colours = data.frame(row.names=sort(lablist), colours=colourlist)
labels$colours = label_colours[labels$class,]
rowlabels = labels[rownames(ani),]
collabels = labels[colnames(ani),]
lablist = sort(unique(labels[,"class"]))
colourlist = rainbow(length(lablist))
label_colours = data.frame(row.names=sort(lablist), colours=colourlist)
labels$colours = label_colours[labels$class,]
rowlabels = labels[rownames(ani),]
collabels = labels[colnames(ani),]
View(colourlist)
colourlist =c("#FF0000FF","#FFFFFFFF", "#AAFF00FF","#00FF00FF","#00FFAAFF","#00AAFFFF","#AA00FFFF","FF00AAFF")
label_colours = data.frame(row.names=sort(lablist), colours=colourlist)
colourlist =c("#FF0000FF","#FFFFFFFF", "#AAFF00FF","#00FF00FF","#00FFAAFF","#00AAFFFF","#AA00FFFF","#FF00AAFF")
colourlist = rainbow(length(lablist))
colourlist =c("#FF0000FF","#FFFFFFFF", "#AAFF00FF","#00FF00FF","#00FFAAFF","#00AAFFFF",,"#0000FFFF","#AA00FFFF","#FF00AAFF",)
colourlist =c("#FF0000FF","#FFFFFFFF", "#AAFF00FF","#00FF00FF","#00FFAAFF","#00AAFFFF","#0000FFFF","#AA00FFFF","#FF00AAFF",)
colourlist =c("#FF0000FF","#FFFFFFFF", "#AAFF00FF","#00FF00FF","#00FFAAFF","#00AAFFFF","#0000FFFF","#AA00FFFF","#FF00AAFF")
label_colours = data.frame(row.names=sort(lablist), colours=colourlist)
labels$colours = label_colours[labels$class,]
rowlabels = labels[rownames(ani),]
collabels = labels[colnames(ani),]
heatmap.2(as.matrix(ani), col=bluered, breaks=seq(0.90, 1.00, 0.001000), trace='none', margins=c(15, 15), cexCol=0.05 + 1/log10(2 * ncol(ani)), cexRow=0.05 + 1/log10(2 * nrow(ani)), dendrogram = "col", labRow = FALSE, labCol = FALSE, main='ANIm_alignment_coverage', RowSideColors=as.vector(rowlabels[,"colours"]), ColSideColors=as.vector(collabels[,"colours"]))
colourlist =c("#FF0000FF","#000000FF", "#AAFF00FF","#00FF00FF","#00FFAAFF","#00AAFFFF","#0000FFFF","#AA00FFFF","#FF00AAFF")
label_colours = data.frame(row.names=sort(lablist), colours=colourlist)
labels$colours = label_colours[labels$class,]
rowlabels = labels[rownames(ani),]
collabels = labels[colnames(ani),]
heatmap.2(as.matrix(ani), col=bluered, breaks=seq(0.90, 1.00, 0.001000), trace='none', margins=c(15, 15), cexCol=0.05 + 1/log10(2 * ncol(ani)), cexRow=0.05 + 1/log10(2 * nrow(ani)), dendrogram = "col", labRow = FALSE, labCol = FALSE, main='ANIm_alignment_coverage', RowSideColors=as.vector(rowlabels[,"colours"]), ColSideColors=as.vector(collabels[,"colours"]))
colourlist = rainbow(length(lablist))
colourlist =c("#FF0000FF","#FFAA00FF", "#000000FF","#00FF00FF","#00FFAAFF","#00AAFFFF","#0000FFFF","#AA00FFFF","#FF00AAFF")
label_colours = data.frame(row.names=sort(lablist), colours=colourlist)
labels$colours = label_colours[labels$class,]
collabels = labels[colnames(ani),]
rowlabels = labels[rownames(ani),]
heatmap.2(as.matrix(ani), col=bluered, breaks=seq(0.90, 1.00, 0.001000), trace='none', margins=c(15, 15), cexCol=0.05 + 1/log10(2 * ncol(ani)), cexRow=0.05 + 1/log10(2 * nrow(ani)), dendrogram = "col", labRow = FALSE, labCol = FALSE, main='ANIm_alignment_coverage', RowSideColors=as.vector(rowlabels[,"colours"]), ColSideColors=as.vector(collabels[,"colours"]))
colourlist = rainbow(length(lablist))
colourlist =c("#FF0000FF","#FFAA00FF", "#AAFF00FF","#000000FF","#00FFAAFF","#00AAFFFF","#0000FFFF","#AA00FFFF","#FF00AAFF")
label_colours = data.frame(row.names=sort(lablist), colours=colourlist)
labels$colours = label_colours[labels$class,]
collabels = labels[colnames(ani),]
rowlabels = labels[rownames(ani),]
heatmap.2(as.matrix(ani), col=bluered, breaks=seq(0.90, 1.00, 0.001000), trace='none', margins=c(15, 15), cexCol=0.05 + 1/log10(2 * ncol(ani)), cexRow=0.05 + 1/log10(2 * nrow(ani)), dendrogram = "col", labRow = FALSE, labCol = FALSE, main='ANIm_alignment_coverage', RowSideColors=as.vector(rowlabels[,"colours"]), ColSideColors=as.vector(collabels[,"colours"]))
colourlist =c("#FF0000FF","#FFAA00FF", "#AAFF00FF","#000000FF","#00FFAAFF","#00AAFFFF","#0000FFFF","#AA00FFFF","#FF00AAFF")
colourlist = rainbow(length(lablist))
colourlist =c("#FF0000FF","#FFAA00FF", "#AAFF00FF","#00FF00FF","#00FFAAFF","#000000FF","#0000FFFF","#AA00FFFF","#FF00AAFF")
label_colours = data.frame(row.names=sort(lablist), colours=colourlist)
labels$colours = label_colours[labels$class,]
collabels = labels[colnames(ani),]
rowlabels = labels[rownames(ani),]
heatmap.2(as.matrix(ani), col=bluered, breaks=seq(0.90, 1.00, 0.001000), trace='none', margins=c(15, 15), cexCol=0.05 + 1/log10(2 * ncol(ani)), cexRow=0.05 + 1/log10(2 * nrow(ani)), dendrogram = "col", labRow = FALSE, labCol = FALSE, main='ANIm percent identify within the Pasteurellales family', RowSideColors=as.vector(rowlabels[,"colours"]), ColSideColors=as.vector(collabels[,"colours"]))
colourlist = rainbow(length(lablist))
colourlist =c("#FF0000FF","#FFAA00FF", "#AAFF00FF","#00FF00FF","#00FFAAFF","#000AAFFFF","#0000FFFF","#000000FF","#FF00AAFF")
label_colours = data.frame(row.names=sort(lablist), colours=colourlist)
labels$colours = label_colours[labels$class,]
collabels = labels[colnames(ani),]
rowlabels = labels[rownames(ani),]
heatmap.2(as.matrix(ani), col=bluered, breaks=seq(0.90, 1.00, 0.001000), trace='none', margins=c(15, 15), cexCol=0.05 + 1/log10(2 * ncol(ani)), cexRow=0.05 + 1/log10(2 * nrow(ani)), dendrogram = "col", labRow = FALSE, labCol = FALSE, main='ANIm percent identify within the Pasteurellales family', RowSideColors=as.vector(rowlabels[,"colours"]), ColSideColors=as.vector(collabels[,"colours"]))
colourlist =c("#FF0000FF","#FFAA00FF", "#AAFF00FF","#00FF00FF","#00FFAAFF","#00AAFFFF","#0000FFFF","#000000FF","#FF00AAFF")
label_colours = data.frame(row.names=sort(lablist), colours=colourlist)
labels$colours = label_colours[labels$class,]
collabels = labels[colnames(ani),]
rowlabels = labels[rownames(ani),]
heatmap.2(as.matrix(ani), col=bluered, breaks=seq(0.90, 1.00, 0.001000), trace='none', margins=c(15, 15), cexCol=0.05 + 1/log10(2 * ncol(ani)), cexRow=0.05 + 1/log10(2 * nrow(ani)), dendrogram = "col", labRow = FALSE, labCol = FALSE, main='ANIm percent identify within the Pasteurellales family', RowSideColors=as.vector(rowlabels[,"colours"]), ColSideColors=as.vector(collabels[,"colours"]))
colourlist = rainbow(length(lablist))
colourlist =c("#FF0000FF","#FFAA00FF", "#AAFF00FF","#00FF00FF","#00FFAAFF","#00AAFFFF","#0000FFFF","#AA00FFFF","#000000FF")
label_colours = data.frame(row.names=sort(lablist), colours=colourlist)
labels$colours = label_colours[labels$class,]
rowlabels = labels[rownames(ani),]
collabels = labels[colnames(ani),]
heatmap.2(as.matrix(ani), col=bluered, breaks=seq(0.90, 1.00, 0.001000), trace='none', margins=c(15, 15), cexCol=0.05 + 1/log10(2 * ncol(ani)), cexRow=0.05 + 1/log10(2 * nrow(ani)), dendrogram = "col", labRow = FALSE, labCol = FALSE, main='ANIm percent identify within the Pasteurellales family', RowSideColors=as.vector(rowlabels[,"colours"]), ColSideColors=as.vector(collabels[,"colours"]))
heatmap.2(as.matrix(ani), col=bluered, breaks=seq(0.90, 1.00, 0.001000), trace='none', margins=c(15, 15), cexCol=0.05 + 1/log10(2 * ncol(ani)), cexRow=0.05 + 1/log10(2 * nrow(ani)), dendrogram = "col", labRow = FALSE, labCol = FALSE, main='ANIm percent identify within the Pasteurellales family', RowSideColors=as.vector(rowlabels[,"colours"]), ColSideColors=as.vector(collabels[,"colours"]), key = FALSE, legend("topright", legend=sort(lablist), col=colourlist, lty=1, lwd=10)
)
heatmap.2(as.matrix(ani), col=bluered, breaks=seq(0.90, 1.00, 0.001000), trace='none', margins=c(15, 15), cexCol=0.05 + 1/log10(2 * ncol(ani)), cexRow=0.05 + 1/log10(2 * nrow(ani)), dendrogram = "col", labRow = FALSE, labCol = FALSE, main='ANIm percent identify within the Pasteurellales family', RowSideColors=as.vector(rowlabels[,"colours"]), ColSideColors=as.vector(collabels[,"colours"]), key = FALSE, legend("topright", legend=sort(lablist), col=colourlist, lty=1, lwd=10))
heatmap.2(as.matrix(ani), col=bluered, breaks=seq(0.90, 1.00, 0.001000), trace='none', margins=c(15, 15), cexCol=0.05 + 1/log10(2 * ncol(ani)), cexRow=0.05 + 1/log10(2 * nrow(ani)), dendrogram = "col", labRow = FALSE, labCol = FALSE, main='ANIm percent identify within the Pasteurellales family', RowSideColors=as.vector(rowlabels[,"colours"]), ColSideColors=as.vector(collabels[,"colours"]), key = FALSE,)
heatmap.2(as.matrix(ani), col=bluered, breaks=seq(0.90, 1.00, 0.001000), trace='none', margins=c(15, 15), cexCol=0.05 + 1/log10(2 * ncol(ani)), cexRow=0.05 + 1/log10(2 * nrow(ani)), dendrogram = "col", labRow = FALSE, labCol = FALSE, main='ANIm percent identify within the Pasteurellales family', RowSideColors=as.vector(rowlabels[,"colours"]), ColSideColors=as.vector(collabels[,"colours"]), key = FALSE,par(lend=1),legend("topright", legend=sort(lablist), col=colourlist, lty=1, lwd=10))
heatmap.2(as.matrix(ani), col=bluered, breaks=seq(0.90, 1.00, 0.001000), trace='none', margins=c(15, 15), cexCol=0.05 + 1/log10(2 * ncol(ani)), cexRow=0.05 + 1/log10(2 * nrow(ani)), dendrogram = "col", labRow = FALSE, labCol = FALSE, main='ANIm percent identify within the Pasteurellales family', RowSideColors=as.vector(rowlabels[,"colours"]), ColSideColors=as.vector(collabels[,"colours"]),lablist = sort(unique(labels[,"class"])), key = FALSE,par(lend=1),legend("topright", legend=sort(lablist), col=colourlist, lty=1, lwd=10))
heatmap.2(as.matrix(ani), col=bluered, breaks=seq(0.90, 1.00, 0.001000), trace='none', margins=c(15, 15), cexCol=0.05 + 1/log10(2 * ncol(ani)), cexRow=0.05 + 1/log10(2 * nrow(ani)), dendrogram = "col", labRow = FALSE, labCol = FALSE, main='ANIm_alignment_coverage', RowSideColors=as.vector(rowlabels[,"colours"]), ColSideColors=as.vector(collabels[,"colours"]))
lablist = sort(unique(labels[,"class"]))
par(lend=1)
legend("topright", legend=sort(lablist), col=colourlist, lty=1, lwd=10)
heatmap.2(as.matrix(ani), col=bluered, breaks=seq(0.90, 1.00, 0.001000), trace='none', margins=c(15, 15), cexCol=0.05 + 1/log10(2 * ncol(ani)), cexRow=0.05 + 1/log10(2 * nrow(ani)), dendrogram = "col", labRow = FALSE, labCol = FALSE, main='ANIm percent identify within the Pasteurellales family', RowSideColors=as.vector(rowlabels[,"colours"]), ColSideColors=as.vector(collabels[,"colours"]), key = FALSE,)
par(lend=1)
legend("topright", legend=sort(lablist), col=colourlist, lty=1, lwd=10)
library(ggplot2)
library(ggplot2)
view(ani)
load("/Volumes/Win/Jordan lab/project_data/M25364/R_playground/.RData")
ggplot()
vignette(ggplot)
vignette(ggplot())
ggplot(ani)
library(reshape2)
df<-cbind(rowlabels,data.frame(ani))
df.m<-melt(df)
View(df)
View(df.m)
(p <- ggplot(df.m, aes(variable, rowlabels)) + geom_tile(aes(fill = value), colour = "white") + scale_fill_gradient(low = "white",high = "steelblue"))
(p <- ggplot(df.m, aes(variable, rowlabels)) + geom_tile(aes(fill = value), colour = "white") + scale_fill_gradient(low = "white",high = "steelblue"))
(p <- ggplot(df.m, aes(class, rowlabels)) + geom_tile(aes(fill = value), colour = "white") + scale_fill_gradient(low = "white",high = "steelblue"))
(p <- ggplot(df.m, aes(value, rowlabels)) + geom_tile(aes(fill = value), colour = "white") + scale_fill_gradient(low = "white",high = "steelblue"))
(p <- ggplot(df.m, aes(variable, rowlabels)) + geom_tile(aes(fill = value), colour = "white") + scale_fill_gradient(low = "white",high = "steelblue"))
(p <- ggplot(df.m, aes(variable, class)) + geom_tile(aes(fill = value), colour = "white") + scale_fill_gradient(low = "white",high = "steelblue"))
(p <- ggplot(df.m, aes(variable, variable)) + geom_tile(aes(fill = value), colour = "white") + scale_fill_gradient(low = "white",high = "steelblue"))
ani_melt <- melt(ani)
View(ani_melt)
setwd(/Volumes/Win/Jordan lab/project_data/cdc_nthi/phenotype_prediction)
setwd(/Volumes/Win/Jordan\ lab/project_data/cdc_nthi/phenotype_prediction)
setwd("/Volumes/Win/Jordan\ lab/project_data/cdc_nthi/phenotype_prediction")
install.packages('gplots')
library(gplots)
data = read.table("phenotypes.tsv", sep = "\t", header = =T, row.names=1)
data = read.table("phenotypes.tsv", sep = "\t", header = T, row.names=1)
data = read.table("phenotypes.tsv", sep = "\t", header = T, row.names=1, fill = T)
View(data)
dim(data)
data = read.table("phenotypes.tsv", sep = "\t", header = T, row.names=1, fill = T)
heatmap.2(as.matrix(data))
heatmap(as.matrix(data), Rowv = T, Colv= T)
data[,order(colSums(data)]
data[,order(colSums(data))]
data <- data[,order(colSums(data))]
heatmap.2(as.matrix(data))
library(ggvis)
ggvis(data, x= "~Nitrate to nitrite", y= ~Catalase)
ggvis(data, x= ~"Nitrate to nitrite", y= ~Catalase)
ggvis(data, x= ~Nitrate.to.nitrite, y= ~Catalase)
summary(data)
library(class)
ind <- sample(2, nrow(data), replace=TRUE, prob=c(0.67, 0.33))
data = read.table("phenotypes.tsv", sep = "\t", header = T, row.names=1, fill = T)
data.training = read.table("phenotypes.tsv", sep = "\t", header = T, row.names=1, fill = T)
data.training = read.table("phenotypes.tsv", sep = "\t", header = T, row.names=1, unique = F)
data.training = read.table("phenotypes.tsv", sep = "\t", header = T, row.names=1)
data.training = read.table("phenotypes.tsv", sep = "\t", header = T, row.names=1)
data.training = read.table("phenotypes.tsv", sep = "\t", header = F, row.names=1)
data.training = read.table("phenotypes.tsv", sep = "\t", header = T, row.names=1, fill =T)
data.training = read.table("phenotypes.tsv", sep = "\t", header = T, row.names=1, fill =T)
data.training = read.table("phenotypes.tsv", sep = "\t", header = T, row.names=1, fill =T)
data.training = read.table("phenotypes.tsv", sep = "\s", header = T, row.names=1, fill =T)
data.training = read.csv("phenotypes.csv", header = T, row.names=1)
data.training = read.table("phenotypes.tsv", sep = "\s", header = T, row.names=1)
data.training = read.table("phenotypes.tsv", sep = "\t", header = T, row.names=1)
data.training = read.table("phenotypes.tsv", sep = "\t", header = T, row.names=1)
data.training = read.table("phenotypes.tsv", sep = "\t", header = T, row.names=1)
View(data.training)
data.training <- data.training[order(row.names(data)),]
data.training <- data.training[sort(row.names(data)),]
data.training <- data.training[-c(7:12),]
data.training <- data.training[-c(8:20),]
data.training <- data.training[-c(8:20),]
data.training <- data.training[-c(8:10,12),]
data.training <- data.training[-c(13:20),]
data.training <- data.training[-c(13:20),]
data.training <- data.training[-c(13:20),]
data.training <- data.training[-c(13:20),]
data.training <- data.training[-c(13:15),]
data - read.table("phenotypes_99.tsv", sep="\t", row.names=1, header=T)
data = read.table("phenotypes_99.tsv", sep="\t", row.names=1, header=T)
dim(data.training)
data.training2 = data.training
data.training2[1:7,49] <- c("Hflu","Hflu","Hflu","Hflu","Hflu","Hflu","Hflu")
dim(data.training)
dim(data.training2)
data.training2[8:12,49] <- c("Hhaem","Hhaem","Hhaem","Hhaem","Hhaem")
data.training2[13:19,49] <- c("Hflu","Hflu","Hflu","Hflu","Hflu","Hflu")
data.training2[13:18,49] <- c("Hflu","Hflu","Hflu","Hflu","Hflu","Hflu")
pred <- knn(train = data.training2[1:48], test = data, c1= data.training2[49,], k=2)
pred <- knn(train = data.training2[,1:48], test = data, c1 = data.training2[,49], k=2)
labels <- data.training2[,49]
pred <- knn(train = data.training2[1:48], test = data, c1=labels, k=2)
pred <- knn(train = data.training2[,1:48], test = data, c1=labels, k=2)
training <- data.training2[,1:48]
View(training)
pred <- knn(train = training, test = data, c1=labels, k=2)
pred <- knn(train = training, test = data, cl=labels, k=2)
dim(data)
dim(training)
View(training)
training[,39]
data = read.table('phenotypes.tsv', sep ="\t", row.names=1, header=T)
pred <- knn(train = training, test = data, cl=labels, k=2)
pred
install.packages(gmodels)
install.packages('gmodels')
library(gmodels)
dim(data)
View(data)
data <- data[sort(row.names(data)),]
data <- data[-c(7:12),]
data[1:6,49] <- c("Hflu","Hflu","Hflu","Hflu","Hflu","Hflu")
data[7,49] <- c("Hhaem")
data[8,49] <- c("Hflu")
data[9:26,49] <- c("Hflu")
data[9:26,49]
data[26:,20] <- c("Hflu")
data[26:20,49] <- c("Hflu")
data[26:37,49] <- c("Hflu")
data[43:60,49] <- c("Hflu")
data[38:42,49] <- c("Hhaem")
data[61:78,49] <- c("Hflu")
data[79:83,49] <- c("Hflu")
testLabels <- data[,49]
CrossTable(x = testLabels
CrossTable(x = testLabels, y = pred, prop.chisq = F)
View(data.training2)
dim(testLabels)
pred
testLabels
val <- pred
val
val <- as.vector(pred)
val
dim(pred)
length(pred)
length(labels)
colSums(data)
colSums(data[,1:48])
pred
dim(labels)
length(labels)
dim(data)
dim(pred)
length(pred\)
length(pred)
pred <- knn(train = training, test = data, cl=labels, k=2)
dim(training)
dim(data)
pred.data <- data[,1:48]
pred <- knn(train = training, test = pred.data, cl=labels, k=2)
pred
View(pred.data)
pred[29]
pred$Hhaem
library(e1071)
install.packages('e1071')
library(e1071)
result <- cmeans(iris[data, 2, 100, m=2, method="cmeans")
result <- cmeans(data, 2, 100, m=2, method="cmeans")
result <- cmeans(data, 3, 100, m=2, method="cmeans")
result <- cmeans(data[,-49], 3, 100, m=2, method="cmeans")
result
result <- cmeans(data[,-49], 2, 100, m=2, method="cmeans")
resukt
result
setwc("/Volumes/Win/Jordan lab/nthi_project/scripts/stacked_dotplot/ANIm_percentage_identity.tab")
setwd("/Volumes/Win/Jordan lab/nthi_project/scripts/stacked_dotplot/")
data = read.table('ANIm_percentage_identity.tab', sep="\t", header-T, row.names-1)
data = read.table('ANIm_percentage_identity.tab', sep="\t", header-T, row.names=1)
data = read.table('ANIm_percentage_identity.tab', sep="\t", header=T, row.names=1)
data = read.table('ANIm_percentage_identity.tab', sep="\t", header=T, row.names=1)
View(data)
